buildscript {
  ext {
    detektVersion = '1.0.0-RC16'
    dokkaVersion = '0.9.18'
    kotlinVersion = '1.3.41'
    kotlinJVMVersion = '1.8'
    junitJupiterVersion = '5.5.0'
    junitAssertJVersion = '3.12.2'
  }

  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
  }
}

plugins {
  id "application"
  id "org.jetbrains.kotlin.jvm" version "1.3.41"
  id "org.jetbrains.dokka" version "0.9.18"
  id "io.gitlab.arturbosch.detekt" version "1.0.0-RC16"
}
apply(plugin: "kotlin")

version '1.0-SNAPSHOT'
mainClassName = 'koref.KorefDriverKt'
sourceCompatibility = "$kotlinJVMVersion"

compileKotlin {
  kotlinOptions.jvmTarget = "$kotlinJVMVersion"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "$kotlinJVMVersion"
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
  compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.+"
  testImplementation "org.assertj:assertj-core:$junitAssertJVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

dokka {
  outputFormat = 'markdown'
  outputDirectory = "$buildDir/kdoc"
}

detekt {
  toolVersion = "$detektVersion"
  input = files("src/main/kotlin")
  config = files("detekt.yml")
}

test {
  useJUnitPlatform()
  beforeTest { descriptor -> logger.lifecycle("Running test: ${descriptor}") }
}
